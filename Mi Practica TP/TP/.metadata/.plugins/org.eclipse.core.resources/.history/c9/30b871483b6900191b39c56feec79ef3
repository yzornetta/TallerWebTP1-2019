package ar.edu.unlam.tallerweb1.persistencia;
import ar.edu.unlam.tallerweb1.SpringTest;
import ar.edu.unlam.tallerweb1.modelo.*;
import org.hibernate.Session;
import org.hibernate.criterion.Restrictions;
import org.junit.Test;
import org.springframework.test.annotation.Rollback;
import org.springframework.transaction.annotation.Transactional;
import static org.assertj.core.api.Assertions.*;
import java.util.List;

public class CiudadHemSur extends SpringTest{
	
	@Test@Rollback@Transactional
	public void PaisHemSurTest() {
		
		Session session = getSession();
		double ecuador = 00.00;	
		
		Ubicacion ubicacion1 = new Ubicacion();
		ubicacion1.setLatitud(-34.92068);
		ubicacion1.setLongitud(-57.953764);
		session.save(ubicacion1);
		
		Continente America = new Continente();
		America.setNombre("America");
		session.save(America);
		
		Pais argentina = new Pais();
		argentina.setNombre("Argentina");
		argentina.setHabitantes(44000000);
		argentina.setIdioma("Espaniol");
		argentina.setContinente(America);
		session.save(argentina);
		
		Ciudad ciudad1 = new Ciudad();
		ciudad1.setNombre("La Plata");
		ciudad1.setPais(argentina);
		ciudad1.setUbicGeo(ubicacion1);
		session.save(ciudad1);
		
		argentina.setCapital(ciudad1);
		session.save(argentina);
		
		Ubicacion ubicacion2 = new Ubicacion();
		ubicacion2.setLatitud(43.1561681);
		ubicacion2.setLongitud(-75.8449946);
		session.save(ubicacion2);
		
		Pais pais2 = new Pais();
		pais2.setNombre("Estados Unidos");
		pais2.setHabitantes(327000000);
		pais2.setIdioma("Ingles");
		
		pais2.setContinente(America);
		session.save(pais2);
		
		Ubicacion ubicacion3 = new Ubicacion();
		ubicacion3.setLatitud(38.8950712);
		ubicacion3.setLongitud(-77.0362758);
		session.save(ubicacion3);
		
		
		Ciudad ciudad2 = new Ciudad();
		ciudad2.setNombre("New York");
		ciudad2.setPais(pais2);
		ciudad2.setUbicGeo(ubicacion2);
		session.save(ciudad2);
		
		Ciudad ciudad3 = new Ciudad();
		ciudad3.setNombre("Washington");
		ciudad3.setPais(pais2);
		ciudad3.setUbicGeo(ubicacion3);
		session.save(ciudad3);
		
		pais2.setCapital(ciudad3);
		session.save(pais2);
		

		@SuppressWarnings("unchecked")
		List<Ciudad> lista = (List<Ciudad>) session.createCriteria(Ciudad.class)
							 .createAlias("ubicacionGeografica","ubi")
							 .add(Restrictions.le("ubi.latitud", ecuador))
							 .list();
		
		assertThat(lista.size()).isEqualTo(1);
				
	}

}
