<?xml version="1.0" encoding="UTF-8"?><testrun name="CiudadHemSur" project="proyecto-limpio-spring" tests="1" started="1" failures="0" errors="1" ignored="0">
  <testsuite name="ar.edu.unlam.tallerweb1.persistencia.CiudadHemSur" time="0.001">
    <testcase name="PaisHemSurTest" classname="ar.edu.unlam.tallerweb1.persistencia.CiudadHemSur" time="0.001">
      <error>java.lang.IllegalStateException: Failed to load ApplicationContext&#13;
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)&#13;
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)&#13;
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)&#13;
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)&#13;
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:230)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:249)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)&#13;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&#13;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)&#13;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:541)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:763)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:463)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:209)&#13;
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in class path resource [test-hibernateContext.xml]: Invocation of init method failed; nested exception is org.hibernate.MappingException: Could not determine type for: ar.edu.unlam.tallerweb1.modelo.Ciudad, at table: Ubicacion, for columns: [org.hibernate.mapping.Column(ciudad)]&#13;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)&#13;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)&#13;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)&#13;
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)&#13;
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)&#13;
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)&#13;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)&#13;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:753)&#13;
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)&#13;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)&#13;
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)&#13;
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)&#13;
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)&#13;
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)&#13;
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)&#13;
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)&#13;
	... 25 more&#13;
Caused by: org.hibernate.MappingException: Could not determine type for: ar.edu.unlam.tallerweb1.modelo.Ciudad, at table: Ubicacion, for columns: [org.hibernate.mapping.Column(ciudad)]&#13;
	at org.hibernate.mapping.SimpleValue.getType(SimpleValue.java:411)&#13;
	at org.hibernate.mapping.SimpleValue.isValid(SimpleValue.java:384)&#13;
	at org.hibernate.mapping.Property.isValid(Property.java:226)&#13;
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:529)&#13;
	at org.hibernate.mapping.RootClass.validate(RootClass.java:265)&#13;
	at org.hibernate.boot.internal.MetadataImpl.validate(MetadataImpl.java:329)&#13;
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:464)&#13;
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)&#13;
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)&#13;
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:416)&#13;
	at org.springframework.orm.hibernate5.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:401)&#13;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)&#13;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)&#13;
	... 40 more&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
